#Задача №1
#напишите программу, которая запрашивает у пользователя пять целых чисел и сохраняет их в список
#создаем пустой список для хранения чисел
numbers = []
# Запрашиваем у пользователя пять целых чисел
for i in range(5):
    number = int(input(f"Введите целое число {i + 1}: "))  # Запрос числа
    numbers.append(number)  # Добавляем число в список
# Выводим список чисел
print("Список чисел:", numbers)

#Задача №2
#дано список целых чисел. Напишите программу, которая находит сумму всех элементов списка
#запрашиваем у пользователя 5 целых чисел и сохраняем их в список
numbers = []
for i in range(5):
    number = int(input(f"Введите целое число {i+1}: "))
    numbers.append(number)
# Находим сумму всех элементов списка
total_sum = sum(numbers)
# Выводим результат
print("Сумма всех элементов списка:", total_sum)

#Задача №3
#дано список целых чисел. Напишите программу, которая находит максимальный элемент в списке
#запрашиваем у пользователя 5 целых чисел и сохраняем их в список
numbers = []
for i in range(5):
    number = int(input(f"Введите целое число {i+1}: "))
    numbers.append(number)
# Находим максимальный элемент в списке
max_number = max(numbers)
# Выводим результат
print("Максимальный элемент в списке:", max_number)

#Задача №4
#дано список, содержащий повторяющиеся элементы. Напишите программу, которая удаляет все дубликаты и оставляет только уникальные элементы
# Пример списка с повторяющимися элементами
numbers = [5, 10, 5, 7, 0, 10, -3, 7]
# Удаляем дубликаты, сохраняя порядок
unique_numbers = []
for number in numbers:
    if number not in unique_numbers:
        unique_numbers.append(number)
# Выводим результат
print("Список с уникальными элементами:", unique_numbers)

#Задача №5
#даны 2 списка. Напишите программу, которая объединяет оба списка в один
# Пример двух списков
list1 = [1, 2, 3]
list2 = [4, 5, 6]
# Объединяем два списка
merged_list = list1 + list2
# Выводим результат
print("Объединённый список:", merged_list)

#Задача №6
#дано список. Напишите программу, которая разворачивает список, меняя порядок элементов на противоположный
# Исходный список
my_list = [1, 2, 3, 4, 5]
# Разворачиваем список
my_list.reverse()
# Выводим результат
print(my_list)

#Задача №7
#дано неотсортированный список целых чисел. Напишите программу, которая сортирует список по возрастанию
# Исходный неотсортированный список
my_list = [5, 2, 9, 1, 5, 6]
# Сортировка списка по возрастанию
my_list.sort()
# Выводим результат
print(my_list)

#Задача №8
#дано два отсортированных списка. Напишите программу, которая сливает их в один отсортированный список
# Два отсортированных списка
list1 = [1, 3, 5, 7]
list2 = [2, 4, 6, 8]
# Итоговый список
merged_list = []
# Индексы для каждого списка
i, j = 0, 0
# Проходим по обоим спискам и сливаем их
while i < len(list1) and j < len(list2):
    if list1[i] < list2[j]:
        merged_list.append(list1[i])
        i += 1
    else:
        merged_list.append(list2[j])
        j += 1
# Добавляем оставшиеся элементы из list1 (если есть)
while i < len(list1):
    merged_list.append(list1[i])
    i += 1
# Добавляем оставшиеся элементы из list2 (если есть)
while j < len(list2):
    merged_list.append(list2[j])
    j += 1
# Выводим результат
print(merged_list)

#Задача №9
#дано список целых чисел. Напишите программу, которая находит минимальный и максимальный элемент в списке
# Пример списка целых чисел
numbers = [3, 7, -2, 5, 8, 0, -4, 12]
# Находим минимальный и максимальный элементы
min_num = min(numbers)
max_num = max(numbers)
# Выводим результат
print("Минимальный элемент:", min_num)
print("Максимальный элемент:", max_num)

#Задача №10
#дано список. Напишите программу, которая переставляет местами соседние элементы списка
# Пример списка
numbers = [1, 2, 3, 4, 5, 6]
# Переставляем местами соседние элементы
for i in range(0, len(numbers) - 1, 2):
    numbers[i], numbers[i + 1] = numbers[i + 1], numbers[i]
# Выводим результат
print("Список после перестановки:", numbers)






